{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kJAAkJ,kBAAkB;AACpK;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,yCAAyC,mBAAmB,mBAAmB,2BAA2B,WAAW,kBAAkB,WAAW,kBAAkB;AACpK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iEAAe,UAAU;;;;;;;;;;;;;;;AC5Ga;;AAEtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oCAAoC,wEAAwE;AAC5G,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA,4BAA4B,wEAAwE;AACpG,eAAe,qBAAqB;AACpC;;AAEA;AACA;AACA,eAAe,q9DAAq9D;AACp+D;AACA;;AAEA;AACA,4EAA4E,eAAe;;AAE3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,yBAAyB,qDAAS;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,SAAS;AACT;AACA,8BAA8B;AAC9B;AACA;AACA,8BAA8B;AAC9B,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yBAAyB,qDAAS;AAClC;AACA;AACA;AACA;AACA,iBAAiB;AACjB,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,iBAAiB;AACjB,cAAc;AACd;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,+GAA+G;AAC/G,SAAS;;AAET,KAAK;AACL,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,IAAI,IAAI,eAAe,IAAI,gBAAgB;AACnE,SAAS;;AAET;AACA;AACA;;AAEA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;ACpuBzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,iEAAe;;;;;;;;;;;;;;ACjEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA,iEAAe,SAAS;;;;;;;;;;;;;;ACtExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,eAAe,q9DAAq9D;AACp+D;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,MAAM;AACN;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;;AAEA,iEAAe,UAAU;;;;;;;;;;;;;;AC7JzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,uJAAuJ,kBAAkB;AACzK;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qFAAqF,2BAA2B,WAAW,kBAAkB,WAAW,kBAAkB;AAC1K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iEAAe,QAAQ;;;;;;UC1GvB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNyC;AACF;AACE;AACJ;AACE;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,sDAAU;AAC/B,mBAAmB,oDAAQ;;AAE3B,oBAAoB,qDAAS;AAC7B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,CAAC;;AAED,qBAAqB,sDAAU;AAC/B;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,oBAAoB,qDAAS;AAC7B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,C","sources":["webpack://sword.io/./src/DeathScene.js","webpack://sword.io/./src/GameScene.js","webpack://sword.io/./src/HealthBar.js","webpack://sword.io/./src/OpenScene.js","webpack://sword.io/./src/TitleScene.js","webpack://sword.io/./src/WonScene.js","webpack://sword.io/webpack/bootstrap","webpack://sword.io/webpack/runtime/define property getters","webpack://sword.io/webpack/runtime/hasOwnProperty shorthand","webpack://sword.io/webpack/runtime/make namespace object","webpack://sword.io/./src/index.js"],"sourcesContent":["function msToTime(duration) {\n    var milliseconds = parseInt((duration % 1000) / 100),\n      seconds = Math.floor((duration / 1000) % 60),\n      minutes = Math.floor((duration / (1000 * 60)) % 60),\n      hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n  \n  \n    return (hours == \"00\"?\"\": hours+\"h \") + (minutes == \"00\"?\"\": minutes+\"m \") + seconds+\"s\";\n  }\n\nclass DeathScene extends Phaser.Scene {\n    constructor(callback) {\n        super()\n        this.callback = callback\n    }\n    preload() {\n    }\n\n    create() {\n        this.lerp = function (start, end, amt){\n            return (1-amt)*start+amt*end\n          }\n        this.background = this.add.rectangle(0, 0, window.innerWidth, window.innerHeight, 0x90ee90).setOrigin(0).setScrollFactor(0, 0).setScale(2);\n        this.text = this.add.text(window.innerWidth / 2, 0, 'You died', {\n            fontSize: '64px',\n            fill: '#000000'\n        }).setOrigin(0.5);\n\n        this.displayTime = 0;\n        this.displayKills = 0;\n\n        this.timeUpdateDelay = 5000 / this.data.timeSurvived\n        this.lastUpdateTime = Date.now() \n\n        this.displayKills = (this.data.kills == 1 ? 1 : 0);\n        this.displayCoins = 0\n\n        this.stats = this.add.text(window.innerWidth / 2, window.innerHeight / 2, 'Killed by: '+this.data.killedBy+`\\nSurvived Time: 0s\\nKills: ${this.displayKills}`, {\n            fontSize: '48px',\n            fill: '#000000'\n        }).setOrigin(0.5);\n\n\n        this.btnrect = this.add.rectangle(0, 0, 0, 0, 0x6666ff);\n        this.btntext = this.add.text(window.innerWidth / 2, window.innerHeight / 1.2, 'Play Again', {\n            fontSize: '48px',\n            fill: '#000000'\n        }).setOrigin(0.5);\n        this.btnrect.x = this.btntext.x - (this.btntext.width/2) - 5\n        this.btnrect.y = this.btntext.y - (this.btntext.height/2) - 5\n        this.btnrect.width = this.btntext.width + 10\n        this.btnrect.height = this.btntext.height + 10\n        //this.stats.y -= this.stats.height\n        this.btnrect.setInteractive().on('pointerdown', (pointer, localX, localY, event) => {\n            this.scene.start('title')\n        });\n        this.returnKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ENTER);\n\n        this.returnKey.on(\"down\", event => {\n            this.scene.start('title')\n        });\n    }\n\n    update() {\n        this.text.setFontSize(window.innerWidth / 10)\n        this.stats.setFontSize(window.innerWidth / 20)\n        this.btntext.setFontSize(window.innerWidth / 25)\n        if (this.text.y < window.innerHeight / 4.5) this.text.y += 10\n\n        if(this.displayKills < this.data.kills ) {\n            this.displayKills += 1\n            this.lastUpdateKills = Date.now()\n        }\n\n        if(this.displayTime < this.data.timeSurvived) {\n            this.displayTime = Math.round(this.lerp(this.displayTime, this.data.timeSurvived, 0.1))\n        }\n        if(this.displayCoins < this.data.coins) {\n            this.displayCoins = Math.round(this.lerp(this.displayCoins, this.data.coins, 0.1))\n            \n        }\n\n\n        this.stats.setText(`Killed by: ${this.data.killedBy}\\nSurvived Time: ${msToTime(this.displayTime)}\\nCoins: ${this.displayCoins}\\nKills: ${this.displayKills}`)\n        const resize = () => {\n            this.game.scale.resize(window.innerWidth, window.innerHeight)\n            this.background.width = window.innerWidth\n            this.background.height = window.innerHeight\n            this.text.x = window.innerWidth / 2\n            this.text.y = window.innerHeight / 4.5\n            this.stats.x = window.innerWidth / 2\n            this.stats.y = window.innerHeight / 2\n            \n            this.btntext.x = window.innerWidth / 2\n            this.btntext.y = window.innerHeight / 1.2\n\n\n            //this.stats.y -= this.stats.height\n        }\n        this.btnrect.x = this.btntext.x - (this.btntext.width/2) - 5\n        this.btnrect.y = this.btntext.y - (this.btntext.height/2) - 5\n        this.btnrect.width = this.btntext.width + 10\n        this.btnrect.height = this.btntext.height + 10\n        window.addEventListener(\"resize\", resize, false);\n\n    }\n}\n\nexport default DeathScene;","import HealthBar from './HealthBar.js'\n\nclass GameScene extends Phaser.Scene {\n    constructor(callback) {\n        super()\n        this.callback = callback\n    }\n\n    preload() {    \n         try {       \n        document.getElementsByClassName(\"grecaptcha-badge\")[0].style.opacity = 0;\n         } catch(e) {\n             console.log(e)\n         }\n        this.ready = false;\n        this.loadrect = this.add.rectangle(0,0, window.visualViewport.width*2, window.visualViewport.height*2, 0x006400).setDepth(200)\n    }\n\n    died(data) {\n        this.loseSound.play()\n        this.children.list.forEach((b) => {\n            b.destroy();\n        })\n        this.dead = true\n        data = Object.assign(data, {name: this.myObj.name, kills: this.myObj.kills, coins: this.myObj.coins})\n        this.callback({win:false, data: data})\n    }\n    win(data) {\n        this.winSound.play()\nthis.dead = true  \ndata = Object.assign(data, {name: this.myObj.name, kills: this.myObj.kills, coins: this.myObj.coins})\nthis.callback({win: true, data:data})\n    }\n\n    create() {\n        this.mobile = false;\n        ((a)=>{if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) this.mobile = true;})(navigator.userAgent||navigator.vendor||window.opera);\n  \n        //recaptcha\n\n        grecaptcha.ready(() =>{\n            grecaptcha.execute('6LdVxgYdAAAAAPtvjrXLAzSd2ANyzIkiSqk_yFpt', {action: 'join'}).then((thetoken) => {\n\n            this.readyt = true\n        this.openingBgm.stop()\n        var config =  {\n            mute: false,\n            volume: 1,\n            rate: 1,\n            detune: 0,\n            seek: 0,\n            loop: false,\n            delay: 0\n        }\n    \n\n        this.coin = this.sound.add('coin', config)\n        this.damage = this.sound.add('damage', config)\n        this.hit = this.sound.add('hit', config)\n        this.winSound = this.sound.add('winSound', config)\n        this.loseSound = this.sound.add('loseSound', config)\n        \n        this.canvas = {\n            width: window.visualViewport.width,\n            height: window.visualViewport.height\n        }\n\n        this.tps = 0\n        //background\n        this.background = this.add.tileSprite(-2500, -2500, 5000, 5000, 'background').setOrigin(0).setDepth(2);\n        this.void = this.add.rectangle(-5000, -5000, 10000, 10000, 0x006400).setOrigin(0).setDepth(1);\n        this.background.fixedToCamera = true;\n\n        //player \n        \n        this.meSword = this.add.image(400, 100, \"sword\").setScale(0.25).setDepth(50)\n        this.mePlayer = this.add.image(400, 100, \"player\").setScale(0.25).setDepth(51)\n        this.swordAnim = {go: false, added: 0}\n        this.goTo = {\n            x: undefined,\n            y: undefined\n        }\n        this.myObj = undefined\n\n        //killcounter\n        this.killCount = this.add.text(window.visualViewport.width / 1.5, 0, 'Kills: 0', {\n            fontFamily: 'Georgia, \"Goudy Bookletter 1911\", Times, serif'\n        }).setFontSize(40).setDepth(101);\n        this.killCount.scrollFactorX = 0\n        this.killCount.scrollFactorY = 0\n\n        //player+fpscounter\n        try { \n        this.playerCount = this.add.text(this.cameras.main.worldView.x*this.cameras.main.zoom, this.cameras.main.worldView.y*this.cameras.main.zoom, 'Players: 0' + \"\\nFPS: 0\", {\n            fontFamily: 'Georgia, \"Goudy Bookletter 1911\", Times, serif'\n        }).setFontSize(20).setDepth(101);\n        this.playerCount.scrollFactorX = 0\n        this.playerCount.scrollFactorY = 0\n\n        //leaderboard\n        this.leaderboard = this.add.text(window.visualViewport.width, this.cameras.main.worldView.y*this.cameras.main.zoom, 'Players: 0' + \"\\nFPS: 0\", {\n            fontFamily: 'Georgia, \"Goudy Bookletter 1911\", Times, serif'\n        }).setFontSize(20).setDepth(101);\n        this.playerCount.scrollFactorX = 0\n        this.playerCount.scrollFactorY = 0\n    } catch(e) {\n        console.log(e)\n    }\n        //minimap\n        this.miniGraphics = this.add.graphics().setDepth(100)\n        this.miniGraphics.x = window.visualViewport.width - 205\n        this.miniGraphics.y = window.visualViewport.height - 205\n        this.miniGraphics.lineStyle(5, 0xffff00, 1)\n        this.miniGraphics.strokeRoundedRect(0, 0, 192,  192, 0)\n        this.cameras.main.ignore(this.miniGraphics)\n        \n        this.miniMap = {square:  this.miniGraphics, people: []}\n\n        //\n        //joystick\n        if(this.mobile) {\n        this.joyStick = this.plugins\n        .get(\"rexvirtualjoystickplugin\")\n        .add(this, {\n          x: 150,\n          y: window.visualViewport.height - 150,\n          radius: 100,\n          base: this.add.circle(0, 0, 100, 0x888888),\n          thumb: this.add.circle(0, 0, 50, 0xcccccc)\n          // dir: '8dir',   // 'up&down'|0|'left&right'|1|'4dir'|2|'8dir'|3\n          // forceMin: 16,\n          // enable: true\n        })\n    }\n      \n        //bar\n        this.meBar = new HealthBar(this, 0, 0, 16, 80)\n\n        //coins array\n        this.coins = []\n       // this.lastMove = Date.now()\n\n        //enemies array\n        this.enemies = []\n        this.dead = false\n        //arrow keys\n        this.cursors = this.input.keyboard.createCursorKeys();\n\n        //camera follow\n        this.cameras.main.setZoom(1)\n        \n        \n        this.UICam = this.cameras.add(this.cameras.main.x, this.cameras.main.y, window.visualViewport.width, window.visualViewport.height);\n        this.cameras.main.ignore([ this.killCount, this.playerCount, this.leaderboard ]);\n        this.UICam.ignore([this.mePlayer, this.meBar.bar, this.meSword, this.background, this.void])\n        this.cameras.main.startFollow(this.mePlayer);\n\n\n        this.input.addPointer(3);\n        ///resize dynamicly\n        const resize = () => {\n            try {\n            this.canvas = {\n                width: window.visualViewport.width,\n                height: window.visualViewport.height\n            }\n            this.game.scale.resize(this.canvas.width, this.canvas.height)\n            if(this.mobile) this.joyStick.y = window.visualViewport.height - 150\n            this.UICam.x = this.cameras.main.x\n            this.UICam.y = this.cameras.main.y\n\n            this.miniGraphics.x = window.visualViewport.width - 205\n            this.miniGraphics.y = window.visualViewport.height - 205\n            \n            \n        } catch(e) {\n            console.log(e)\n        }\n        }\n\n         window.addEventListener(\"resize\", resize, true);\n        //go packet\n        this.socket = io()\n        this.socket.emit(\"go\", this.name, thetoken)\n\n        //mouse down\n\n        this.input.on('pointerdown', function (pointer) {\n            if(this.mobile && this.joyStick.pointer && this.joyStick.pointer.id == pointer.id) return\n            if (!this.mouseDown) {\n                this.gamePoint = {x: pointer.x, y: pointer.y}\n                this.mouseDown = true\n                this.socket.emit(\"mouseDown\", true)\n\n            }\n        }, this);\n        this.input.on('pointerup', function (pointer) {\n            \n            if(this.mobile && this.joyStick.pointer && this.joyStick.pointer.id == pointer.id) return\n            if (this.mouseDown) {\n                this.gamePoint = {x: pointer.x, y: pointer.y}\n                this.mouseDown = false\n                this.socket.emit(\"mouseDown\", false)\n            }\n        }, this);\n        if(this.mobile) {\n            this.gamePoint = {x: 0, y: 0}\n        this.input.on('pointermove', (pointer) => {\n            if(this.joyStick.pointer && this.joyStick.pointer.id == pointer.id) return\n            this.gamePoint = {x: pointer.x, y: pointer.y}\n        })\n    }\n        this.socket.on(\"tps\", (tps) => {\n            this.tps = tps\n        })\n        this.socket.on(\"ban\", (data) => {\n            document.write(data)\n        })\n\n        //boundary\n        this.graphics = this.add.graphics().setDepth(4)\n\n        this.graphics.lineStyle(10, 0xffff00, 1)\n\n        this.graphics.strokeRoundedRect(-2500, -2500, 5000, 5000, 0);\n        //server -> client\n        const addPlayer = (player) => {\n           if (this.enemies.filter(e => e.id === player.id).length > 0) return\n  /* vendors contains the element we're looking for */\n\n            var enemy = {\n                id: player.id,\n                down: false,\n                toMove: {\n                    x: undefined,\n                    y: undefined\n                },\n                playerObj: undefined,\n                lastTick: Date.now(),\n                sword: this.add.image(player.pos.x, player.pos.y, player.skin+\"Sword\").setScale(0.25).setDepth(49),\n                player: this.add.image(player.pos.x, player.pos.y, player.skin+\"Player\").setScale(0.25).setDepth(49),\n                bar: new HealthBar(this, player.pos.x, player.pos.y + 55),\n                nameTag: this.add.text(player.pos.x, player.pos.y - 90, player.name, {\n                    fontFamily: 'serif',\n                    fill: '#000000',\n                    fontSize: '25px'\n                }).setDepth(100),\n                swordAnim: {go: false, added: 0},\n                toAngle: 0\n            }\n         \n                var factor = (100/(player.scale*100))*1.5\n       \n            enemy.sword.angle = Math.atan2(player.mousePos.y - ((player.mousePos.viewport.height) / 2), player.mousePos.x - ((player.mousePos.viewport.width) / 2)) * 180 / Math.PI + 45;\n            \n            \n            enemy.sword.x = enemy.player.x + enemy.player.width / factor * Math.cos(enemy.sword.angle * Math.PI / 180)\n            enemy.sword.y = enemy.player.y + enemy.player.width / factor * Math.sin(enemy.sword.angle * Math.PI / 180)\n\n          \n            this.UICam.ignore([enemy.player, enemy.bar.bar, enemy.sword, enemy.nameTag])\n            this.enemies.push(enemy)\n\n            var circle = this.add.circle(0, 0, 10, 0xFF0000)\n            this.cameras.main.ignore(circle)\n            circle.setDepth(98)\n             this.miniMap.people.push(\n                 {\n                     id: player.id,\n                     circle: circle\n                 }\n             )\n\n        }\n        this.removePlayer = (id) => {\n            try {\n                var enemy = this.enemies.find(enemyPlayer => enemyPlayer.id == id)\n        \n                enemy.player.destroy()\n                enemy.sword.destroy()\n                enemy.bar.destroy()\n                enemy.nameTag.destroy()\n        \n                this.enemies.splice(this.enemies.findIndex(enemy => enemy.id == id), 1)\n        \n                var miniMapPlayer = this.miniMap.people.find(x => x.id === id)\n                miniMapPlayer.circle.destroy()\n                this.miniMap.people = this.miniMap.people.filter(p => p.id != id)\n        \n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n\n        this.socket.on(\"players\", (players) => {\n            players.forEach(player => addPlayer(player))\n\n            this.ready = true\n          \n            if(!this.ready) {\n                this.ready = true\n          \n            }\n        })\n        this.socket.on(\"new\", (player) => {\n            addPlayer(player)\n            if(!this.ready) {\n            this.ready = true\n           \n            }\n        })\n        this.socket.on(\"me\", (player) => {\n            if(this.loadrect.visible) this.loadrect.destroy()\n\n            if(this.mePlayer.texture.key+\"Player\" != player.skin) {\n                this.mePlayer.setTexture(player.skin+\"Player\")\n                this.meSword.setTexture(player.skin+\"Sword\")\n            }\n\n            if (!this.myObj) {\n                this.mePlayer.x = player.pos.x\n                this.mePlayer.y = player.pos.y\n            } else {\n                this.goTo.x = player.pos.x\n                this.goTo.y = player.pos.y\n            }\n            this.mePlayer.setScale(player.scale)\n            this.meBar.maxValue = player.maxHealth\n            this.meBar.setHealth(player.health)\n           // if(this.myObj) console.log( this.cameras.main.zoom+\" -> \"+this.myObj.coins+\" -> \"+player.scale)\n            if(!(this.cameras.main.zoom <= 0.15)) {\n            if(player.scale < 0.75) this.cameras.main.setZoom(1.25-player.scale)\n            if(player.scale >= 3) this.cameras.main.setZoom(0.56-((player.scale-1)/8))\n            else if(player.scale >= 1) this.cameras.main.setZoom(0.56-((player.scale-1)/8))\n            \n            else if(player.scale >= 0.75) this.cameras.main.setZoom(0.56-((player.scale-0.75)/3))\n\n            }\n            this.meSword.setScale(player.scale)\n\n            //this.meLine.setTo(0, 0, 250, 250)\n            this.killCount.setText(\"Kills: \" + player.kills+\"\\nCoins: \"+player.coins)\n            this.myObj = player\n\n            //minimap\n            if(!this.miniMap.people.find(x => x.id === player.id)) {\n                var circle = this.add.circle(0, 0, 10, 0xFFFFFF)\n                this.cameras.main.ignore(circle)\n                circle.setDepth(99)\n                 this.miniMap.people.push(\n                     {\n                         id: player.id,\n                         circle: circle\n                     }\n                 )\n            }\n\n            var miniMapPlayer = this.miniMap.people.find(x => x.id === player.id)\n            \n            miniMapPlayer.circle.x = (this.miniMap.square.x + ((player.pos.x / 2500) * 96))+96\n            miniMapPlayer.circle.y = (this.miniMap.square.y+ ((player.pos.y / 2500) * 96)) + 96\n            miniMapPlayer.circle.radius = 20*player.scale\n        })\n        this.socket.on(\"player\", (player) => {\n            //update player\n            if (!this.ready) return\n            try {\n               \n                var enemy = this.enemies.find(enemyPlayer => enemyPlayer.id == player.id)\n                if(!enemy) return\n\n                enemy.lastTick = Date.now()\n\n                enemy.playerObj = player\n                enemy.bar.maxValue = player.maxHealth\n                enemy.bar.setHealth(player.health);\n\n                //update pos\n                enemy.toMove.x = player.pos.x\n                enemy.toMove.y = player.pos.y\n\n                //update sword\n                var mousePos = player.mousePos\n                enemy.toAngle = Math.atan2(mousePos.y - ((mousePos.viewport.height) / 2), mousePos.x - ((mousePos.viewport.width) / 2)) * 180 / Math.PI + 45;\n\n                enemy.player.setScale(player.scale)\n                enemy.sword.setScale(player.scale)\n                enemy.down = player.mouseDown\n\n                //minimap\n                var miniMapPlayer = this.miniMap.people.find(x => x.id === player.id)\n            \n                miniMapPlayer.circle.x = (this.miniMap.square.x + ((player.pos.x / 2500) * 96))+96\n                miniMapPlayer.circle.y = (this.miniMap.square.y+ ((player.pos.y / 2500) * 96)) + 96\n                miniMapPlayer.circle.radius = 20 * player.scale\n\n            } catch (e) {\n                console.log(e)\n            }\n        })\n        this.socket.on(\"playerLeave\", this.removePlayer)\n        this.socket.on(\"playerDied\", this.removePlayer)\n\n        this.socket.on(\"dealHit\", (playerId) => {\n            this.hit.play()\n        })\n        this.socket.on(\"takeHit\", (playerId) => {\n            this.damage.play()\n        })\n\n        //coins\n\n        const addCoin = coin => {\n          if(this.dead) return\n            this.coins.push(\n                {\n                    id: coin.id,\n                    item: this.add.image(coin.pos.x, coin.pos.y, 'coin').setScale(coin.size/100).setDepth(20),\n                    state: {collected: false, collectedBy: undefined, time: 0}\n                }\n                )\n\n                this.UICam.ignore(this.coins[this.coins.length - 1].item)\n        }\n\n        this.socket.on(\"coins\", (coinsArr) => {\n           \n            coinsArr.forEach((coin) => {\n                if(this.coins.filter(e => e.id == coin.id).length == 0) {\n                    addCoin(coin)\n                }\n            })\n\n           var remove = this.coins.filter(e=>coinsArr.filter(b => (e.id == b.id) && (!e.state.collected)).length == 0)\n           remove.forEach((coin) => {\n               \n               coin.item.destroy()\n           })\n           this.coins = this.coins.filter(e=>coinsArr.filter(b => (e.id == b.id) && (!e.state.collected)).length == 1)\n        })\n\n        this.socket.on(\"coin\", (coin) => {      \n            if(Array.isArray(coin)) {\n                coin.forEach((x) => {\n                    addCoin(x)\n                })\n            } else {      \n            addCoin(coin)\n            }\n        })\n\n        this.socket.on(\"youDied\", (data) => {\n            this.died(data)\n        })\n        this.socket.on(\"youWon\", (data) => {\n            this.win(data)\n        })\n        this.socket.on(\"collected\", (coinId, playerId) => {\n            if(this.myObj && this.myObj.id == playerId) this.coin.play() \n            if(this.coins.find(coin => coin.id == coinId)) this.coins.find(coin => coin.id == coinId).state = {collected: true, collectedBy: playerId, time: 0}\n        })\n\n    })\n    })\n    }\n\n    update() {\n        if(!this.readyt) return\n       \n        var controller = {\n            left: false,\n            up: false,\n            right: false,\n            down: false\n        }\n\n\n        var wKey = this.input.keyboard.addKey('W');\n        var aKey = this.input.keyboard.addKey('A');\n        var sKey = this.input.keyboard.addKey('S');\n        var dKey = this.input.keyboard.addKey('D');\n        try {\n        this.key = this.mobile ?  this.joyStick.createCursorKeys() : this.cursors\n        if (this.key.up.isDown || wKey.isDown ) {\n            controller.up = true\n\n        }\n        if (this.key.down.isDown || sKey.isDown ) {\n            controller.down = true\n\n        }\n        if (this.key.right.isDown || dKey.isDown) {\n            controller.right = true\n\n        }\n        if (this.key.left.isDown || aKey.isDown) {\n            controller.left = true\n\n        }\n    \n        this.socket.emit(\"move\", controller)\n        } catch(e) {\n            console.log(e)\n        }\n       // this.lastMove = Date.now()\n        //sword \n\n               \nif(this.meSword) var old = this.meSword.angle\n\nif(!this.mobile) var mousePos = this.input\nelse var mousePos = this.gamePoint\n\nconsole.log(mousePos)\n\n\nthis.meSword.angle = Math.atan2(mousePos.y - (this.canvas.height / 2), mousePos.x - (this.canvas.width / 2)) * 180 / Math.PI + 45;\nthis.mePlayer.angle = this.meSword.angle + 45 +180\n         //sword animation\n        if (this.mouseDown) this.swordAnim.go = true\n        else this.swordAnim.go = false\n        \n        \n        if(this.swordAnim.go) {\n\n            if(this.swordAnim.added < 50) this.swordAnim.added += 10\n            this.meSword.angle -= this.swordAnim.added\n        } else if(this.swordAnim.added >0) {\n             this.swordAnim.added -= 10\n            this.meSword.angle -= this.swordAnim.added\n        }\n        \n        \n        var mousePos2 = {\n            viewport: {\n                width: this.canvas.width,\n                height: this.canvas.height\n            },\n            x: mousePos.x,\n            y: mousePos.y\n        }\n\n        if (this.socket && old && this.meSword.angle != old) this.socket.emit(\"mousePos\", mousePos2)\n\n        var fps = this.sys.game.loop.actualFps\n   \n        //var difference = function (a, b) { return Math.abs(a - b); }\n            function lerp (start, end, amt){\n  return (1-amt)*start+amt*end\n}\nconst clamp = (num, min, max) => Math.min(Math.max(num, min), max);\nfunction repeat(t, m) {\n  return clamp(t - Math.floor(t / m) * m, 0, m);\n}\n\nfunction lerpTheta(a, b, t) {\n  const dt = repeat(b - a, 360);\n  return lerp(a, a + (dt > 180 ? dt - 360 : dt), t);\n}\n        this.enemies.forEach(enemy => {\n            if(Date.now() - enemy.lastTick > 10000) return this.removePlayer(enemy)\n           // if (enemy.player.x != enemy.toMove.x && enemy.player.y !=enemy.toMove.y) speed = speed *0.707\n    /*        no lerp\n            if (enemy.player.x < enemy.toMove.x) enemy.player.x += speed\n            if (enemy.player.x > enemy.toMove.x) enemy.player.x -= speed\n            if (enemy.player.y < enemy.toMove.y) enemy.player.y += speed\n            if (enemy.player.y > enemy.toMove.y) enemy.player.y -= speed\n            */\n            //yes lerp\n\nif(enemy.toMove.x ) {\n        enemy.player.x = lerp(enemy.player.x, enemy.toMove.x,fps/500)\nenemy.player.y = lerp(enemy.player.y, enemy.toMove.y, fps/500)\n}\n\n\n          // if(difference(enemy.player.x, enemy.toMove.x) < speed) enemy.player.x = enemy.toMove.x\n          // if(difference(enemy.player.y, enemy.toMove.y) < speed) enemy.player.y = enemy.toMove.y\n        if(enemy.playerObj) var scale = enemy.playerObj.scale\n        else var scale = 0.25\n          enemy.bar.width = (enemy.player.height*scale / 0.9375)\n          enemy.bar.height = (enemy.player.height*scale*0.150)\n          enemy.bar.x = enemy.player.x  - enemy.bar.width / 2\n          enemy.bar.y = enemy.player.y - (enemy.player.height*scale/1.2)\n\n            enemy.bar.draw()\n            try {\n            enemy.nameTag.setFontSize(100*scale)\n            enemy.nameTag.x = enemy.player.x  - enemy.nameTag.width / 2\n            enemy.nameTag.y = enemy.player.y - (enemy.player.height*scale) - enemy.nameTag.height\n            } catch(e) {\n                console.log(e)\n            }\n          if(enemy.playerObj) {\n            var factor = (100/(enemy.playerObj.scale*100))*1.5\n          } else {\n              var factor = 6\n          }         enemy.sword.angle = lerpTheta(enemy.sword.angle, enemy.toAngle, 0.5)\n          enemy.player.angle = enemy.sword.angle + 45 + 180\n\n                         if (enemy.down) {\n                             enemy.swordAnim.go = true\n                            if(!enemy.swordAnim.added) enemy.swordAnim.added = 0\n                        } else enemy.swordAnim.go = false\n\n                if(enemy.swordAnim.go && enemy.swordAnim.added < 50) {\n                    enemy.swordAnim.added += 10\n                }\n\n                if(!enemy.swordAnim.go  && enemy.swordAnim.added > 0) {\n                    enemy.swordAnim.added -= 10\n\n                }\n                enemy.sword.angle -= enemy.swordAnim.added\n               \n\n            enemy.sword.x = enemy.player.x + enemy.player.width / factor * Math.cos(enemy.sword.angle * Math.PI / 180)\n            enemy.sword.y = enemy.player.y + enemy.player.width / factor * Math.sin(enemy.sword.angle * Math.PI / 180)\n\n\n                \n        })\n \n    /*    if(this.myObj) {\n            var speed = this.myObj.speed / fps\n        } else {\n            var speed = 700 /fps\n        }\n        \n   \n         //console.log(speed)\n     \n        if (this.goTo.x != this.mePlayer.x && this.goTo.y != this.mePlayer.y) speed = speed *0.707\n //without lerp\n        if (this.goTo.x < this.mePlayer.x) this.mePlayer.x -= speed\n        if (this.goTo.x > this.mePlayer.x) this.mePlayer.x += speed\n        if (this.goTo.y < this.mePlayer.y) this.mePlayer.y -= speed\n        if (this.goTo.y > this.mePlayer.y) this.mePlayer.y += speed\n        */\n        //with lerp\n\nif(this.goTo.x ) {\n    \n        this.mePlayer.x = lerp(this.mePlayer.x, this.goTo.x, fps/500)\nthis.mePlayer.y = lerp(this.mePlayer.y, this.goTo.y,fps/500)\n}\n//console.log(this.mePlayer.x, this.mePlayer.y)\n      //  if(difference(this.goTo.x, this.mePlayer.x) < 10) this.mePlayer.x = this.goTo.x\n      //  if(difference(this.goTo.y, this.mePlayer.y) < 10) this.mePlayer.y = this.goTo.y\n      var myObj = this.myObj\n  \n        if(!myObj) myObj = {scale: 0.25}\n\n        this.meBar.width = (this.mePlayer.height*myObj.scale / 0.9375)\n        this.meBar.height = (this.mePlayer.height*myObj.scale*0.200)\n        this.meBar.x = this.mePlayer.x  - this.meBar.width / 2\n        this.meBar.y = this.mePlayer.y - (this.mePlayer.height*myObj.scale/1.2)\n        this.meBar.draw()\n        if(this.myObj) { \n        var factor1 = (100/(this.myObj.scale*100))*1.5\n        } else {\n            var factor1 = 6\n        }\n        this.meSword.x = this.mePlayer.x + this.mePlayer.width / factor1 * Math.cos(this.meSword.angle * Math.PI / 180)\n        this.meSword.y = this.mePlayer.y + this.mePlayer.width / factor1 * Math.sin(this.meSword.angle * Math.PI / 180)\n\n\n        \n\n        //leaderboard\n        if(!this.myObj) return\n        \n        var enemies = this.enemies.filter(a=>a.hasOwnProperty(\"playerObj\") && a.playerObj)\n\n        enemies.push({playerObj: this.myObj})\n       try {\n        var sorted = enemies.sort((a,b) => a.playerObj.coins - b.playerObj.coins).reverse().slice(0,10)\n        var text = \"\"\n        sorted.forEach((entry, i) => {\n            if(!entry.playerObj) return\n            if(!entry.playerObj.hasOwnProperty(\"coins\")) return console.log(entry.playerObj)\n            var playerObj = entry.playerObj\n            text += `#${i+1}: ${playerObj.name}- ${playerObj.coins}\\n`\n        })\n\n        this.leaderboard.setText(text)\n        this.leaderboard.x = window.visualViewport.width - this.leaderboard.width\n        this.killCount.x = (window.visualViewport.width*0.9) - this.leaderboard.width - this.killCount.width\n\n    } catch(e) {\n        //we shall try next frame\n        console.log(e)\n    }\n        //playercount\n        try {\n        this.playerCount.setText('Players: ' + (Object.keys(this.enemies).length + 1).toString() + \"\\nFPS: \" + Math.round(this.sys.game.loop.actualFps) + \"\\nTick Speed: \" + Math.round((this.tps / 30) * 100) + \"%\")\n        this.playerCount.x = 0\n        this.playerCount.y = 0\n        } catch(e) {\n            console.log(e)\n        }\n        if(!this.myObj) return\n        const distance = (x1, y1, x2, y2) => Math.hypot(x2 - x1, y2 - y1); \n        this.coins.forEach((coin) => {\n            if(coin.state.collected) {\n                if(coin.state.collectedBy == this.myObj.id) {\n                    var x = this.mePlayer.x\n                    var y = this.mePlayer.y\n                } else {\n                  try {\n                    var player = this.enemies.find(el => el.id == coin.state.collectedBy)\n                    var x = player.player.x\n                    var y = player.player.y\n                  } catch(e) {\n                    console.log(e)\n                    return\n                  }\n                }\n                    coin.item.x = lerp(coin.item.x, x, ((6 - (Math.log2(fps) - Math.log2(1.875))) / 10)*2)\n                    coin.item.y = lerp(coin.item.y, y,(6 - (Math.log2(fps) - Math.log2(1.875))) / 10)\n                    coin.state.time += 1\n                    if(distance(coin.item.x, coin.item.y, x, y) < this.mePlayer.width * this.mePlayer.scale / 3 || coin.state.time > 7) {\n                        coin.item.destroy()\n                        this.coins = this.coins.filter((el) => el.id != coin.id)\n                    }\n                \n            }\n        })\n\n        //background movement\n      //  this.background.setTilePosition(this.cameras.main.scrollX, this.cameras.main.scrollY);\n\n        if (this.ready && !this.dead && !this.socket.connected) {\n            document.write(\"<h1>You got disconnected</h1><br><button onclick=\\\"location.reload()\\\"><h1>Refresh</h1></button>\")\n            this.dead = true\n        }\n    }\n}\n\nexport default GameScene;\n","class HealthBar {\n\n    constructor (game, x, y, width, height)\n    {\n\n        this.bar = new Phaser.GameObjects.Graphics(game).setDepth(99);\n  \n        this.x = x;\n        this.y = y;\n\n        this.maxValue = 100;\n        this.value = 100;\n        \n        this.height = height\n        this.width = width\n  \n        game.add.existing(this.bar);\n    }\n  \n    setHealth (amount)\n    {\n  \n        const clamp = (num, min, max) => Math.min(Math.max(num, min), max);\n        this.value = clamp(amount, 0, this.maxValue)\n  \n        this.draw();\n  \n        return (this.value === 0);\n    }\n  \n    draw ()\n    {\n        this.bar.clear();\n  \n        //  BG\n        this.bar.fillStyle(0x000000);\n        this.bar.fillRect(this.x, this.y, this.width, this.height);\n  \n        //  Health\n  \n        this.bar.fillStyle(0xffffff);\n        this.bar.fillRect(this.x + 2, this.y + 2, this.width-4, this.height-4);\n  \n        if (this.value < 30)\n        {\n            this.bar.fillStyle(0xff0000);\n        }\n        else\n        {\n            this.bar.fillStyle(0x00ff00);\n        }\n\n        var d = Math.floor((this.width-4) * (this.value/this.maxValue));\n  \n        this.bar.fillRect(this.x + 2, this.y + 2, d, this.height-4);\n    }\n  \n    destroy ()\n    {\n      this.bar.destroy()\n    }\n  \n  }\n  \n\n  export default HealthBar","function msToTime(duration) {\n    var milliseconds = parseInt((duration % 1000) / 100),\n      seconds = Math.floor((duration / 1000) % 60),\n      minutes = Math.floor((duration / (1000 * 60)) % 60),\n      hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n  \n  \n    return (hours == \"00\"?\"\": hours+\"h \") + (minutes == \"00\"?\"\": minutes+\"m \") + seconds+\"s\";\n  }\n\nclass OpenScene extends Phaser.Scene {\n    constructor(callback) {\n        super()\n        this.callback = callback\n    }\n    preload() {\n        this.load.plugin(\"rexvirtualjoystickplugin\",    \"https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/dist/rexvirtualjoystickplugin.min.js\", true);\n        this.load.image(\"playerPlayer\", \"/assets/images/player.png\");\n        this.load.image(\"playerSword\", \"/assets/images/sword.png\");\n        this.load.image(\"devilPlayer\", \"/assets/images/devilPlayer.png\");\n        this.load.image(\"devilSword\", \"/assets/images/devilSword.png\");\n        this.load.image('background', '/assets/images/background.jpeg');\n        this.load.image('coin', '/assets/images/coin.png');\n\n        this.load.audio('coin', '/assets/sound/coin.m4a');\n        this.load.audio('damage', '/assets/sound/damage.mp3');\n        this.load.audio('hit', '/assets/sound/hitenemy.wav');\n        this.load.audio('winSound', '/assets/sound/win.m4a');\n        this.load.audio('loseSound', '/assets/sound/lost.mp3');\n    }\n\n    create() {\n        this.go = false\n        this.background = this.add.rectangle(0, 0, window.visualViewport.width, window.visualViewport.height, 0x000000).setOrigin(0).setScrollFactor(0, 0).setScale(2);\n        this.text = this.add.text(window.visualViewport.width / 2, window.visualViewport.height / 2, 'Click to join the game..', {\n            fontSize: '64px',\n            fill: '#FFFFFF'\n        }).setOrigin(0.5);\n        this.text.setAlpha(0)\n        ///resize dynamicly\n        const resize = () => {\n            try {\n            this.game.scale.resize(window.visualViewport.width, window.visualViewport.height)\n            this.background.height = window.visualViewport.height\n            this.background.width = window.visualViewport.width\n            \n            \n        } catch(e) {\n            console.log(e)\n        }\n        }\n        window.addEventListener(\"resize\", resize, true)\n        this.input.on(\"pointerdown\", event => {\n            this.go = true\n        });\n    }\n\n    update() {\n        this.text.x = (window.visualViewport.width / 2)\n        this.text.y = (window.visualViewport.height / 2)\n        this.text.setFontSize(window.visualViewport.width * 128 / 1920)\n        if(!this.go) {\n        if(this.text.alpha < 1) this.text.setAlpha(this.text.alpha + 0.01)\n        } else {\n            if(this.text.alpha > 0 )this.text.setAlpha(this.text.alpha - 0.05)\n            else this.scene.start('title')\n        }\n    }\n}\n\nexport default OpenScene;","class TitleScene extends Phaser.Scene {\n  constructor(callback) {\n    super()\n    this.callback = callback\n  }\n preload() {\n  document.getElementsByClassName(\"grecaptcha-badge\")[0].style.opacity = 100;\n  this.load.image('opening', '/assets/images/opening.png');\n  this.load.html(\"form\", \"/textbox.html\");\n  this.load.html(\"promo\", \"/promo.html\");\n  this.load.audio('openingsound', '/assets/sound/opening.mp3')\n // document.cookie = \"validate=madebycodergautamdonthackorelseurstupid\";\n}\n\n create() {\n  this.music = this.sound.add('openingsound', {\n    mute: false,\n    volume: 1,\n    rate: 1,\n    detune: 0,\n    seek: 0,\n    loop: true,\n    delay: 0\n});\nthis.music.play()\n\nthis.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.W)\nthis.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A)\nthis.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S)\nthis.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D)\nthis.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)\n\n\n  this.background = this.add.image(0, 0, 'opening').setOrigin(0).setScrollFactor(0, 0).setScale(2);\n  this.background.displayHeight = window.innerHeight\n  this.background.displayWidth = window.innerWidth\n  this.text = this.add.text(window.innerWidth/2, 0, 'Sword.io', {\n    fontSize: '64px',\n    fill: '#000000'\n  }).setOrigin(0.5);\n  if(this.showPromo) {\n            this.mobile = false;\n        ((a)=>{if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) this.mobile = true;})(navigator.userAgent||navigator.vendor||window.opera);\n        if(this.mobile) this.showPromo = false\n  }\n  this.nameBox = this.add.dom(window.innerWidth/2, window.innerHeight/1.7 ).createFromCache(\"form\");\n     if(this.showPromo) {\n\n       this.promo = this.add.dom(0, 0).createFromCache(\"promo\")\n\n       this.promo.x = (window.innerWidth / 2)\n       this.promo.y =  (window.innerHeight / 2)\n       this.promo.getChildByName(\"close\").onclick = () => {\n         this.promo.destroy()\n       }\n     }\n\n  this.input.keyboard.on('keydown', function (event) {\n\n    if(this.nameBox.getChildByName('name') && (this.nameBox.getChildByName('name').value.length >= 16 ||this.nameBox.getChildByName('name')  !== document.activeElement)) return\n   \tif(event.key == 'a'){\n   \t\tthis.nameBox.getChildByName('name').value+=event.key;\n   \t}else if(event.key == 's'){\n   \t\tthis.nameBox.getChildByName('name').value+=event.key;\n   \t}else if(event.key == 'd'){\n   \t\tthis.nameBox.getChildByName('name').value+=event.key;\n   \t}else if(event.key == 'w'){\n   \t\tthis.nameBox.getChildByName('name').value+=event.key;\n   \t} else if(event.which == 32) {\n       this.nameBox.getChildByName('name').value+=event.key;\n     }\n}.bind(this));\n\n  this.nameBox.getChildByName(\"name\").value = window.localStorage.getItem(\"oldName\")  ?  window.localStorage.getItem(\"oldName\") : \"\"\n\n  \n  this.done = false\n\n  this.btnrect = this.add.rectangle(0, 0, 0, 0, 0x00FF00);\n  this.btntext = this.add.text(window.innerWidth / 2, window.innerHeight / 1.2, 'Play', {\n      fontSize: '48px',\n      fill: '#000000'\n  }).setOrigin(0.5);\n  this.btnrect.x = this.btntext.x - (this.btntext.width/2) - 5\n  this.btnrect.y = this.btntext.y - (this.btntext.height/2) - 5\n  this.btnrect.width = this.btntext.width + 10\n  this.btnrect.height = this.btntext.height + 10\n \n  const go = () => {\n    let name = this.nameBox.getChildByName(\"name\")\n\n  // let name ={value: \"hi\"}\n    if(!name) return\n    else if(name.value == \"\") return\n    else if(this.done) return\n    else {\n      this.done = true\n      window.localStorage.setItem(\"oldName\", name.value)\n      this.callback(name.value, this.music)\n      this.nameBox.destroy()\n\n    }\n  }\n\n  this.btnrect.setInteractive().on('pointerdown', (pointer, localX, localY, event) => {\n       if(this.promo && this.promo.visible) {\n       } else go()\n  });\n  this.returnKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ENTER);\n  this.returnKey.on(\"down\", event => {\n   if(this.promo && this.promo.visible) {\n     this.promo.destroy()\n   } else go()\n  });\n\n  \n  const resize = ()=>{\n    this.game.scale.resize(window.innerWidth, window.innerHeight)\n  \n    this.nameBox.x = window.innerWidth / 2\n    this.nameBox.y = window.innerHeight / 1.8\n    if(this.showPromo) {\n              const convert = (num, val, newNum) => (newNum * val) / num\n       this.promo.x = (window.innerWidth / 2)\n       this.promo.y =  (window.innerHeight / 2)\n    }\n    this.btntext.x = window.innerWidth / 2 \n   this.btntext.y =  window.innerHeight / 1.7 + this.nameBox.height \n   //this.btntext.y =  window.innerHeight / 1.7 + 10\n    this.btnrect.width = this.btntext.width + 10 \n    this.btnrect.height = this.btntext.height + 10\n    this.btnrect.x = this.btntext.x - (this.btntext.width/2) - 5\n    this.btnrect.y = this.btntext.y - (this.btntext.height/2) - 5\n    this.btnrect.width = this.btntext.width + 10\n    this.btnrect.height = this.btntext.height + 10\n    this.background.displayWidth = window.innerWidth\n    this.background.displayHeight = window.innerHeight\n    this.text.x = window.innerWidth / 2\n    this.text.y = window.innerHeight / 3\n\n  }\n        \n    window.addEventListener(\"resize\", resize, false);\n\n    resize()\n    \n}\n\n update() {\n  this.text.setFontSize( window.innerWidth / 10)\n    if(this.text.y < window.innerHeight/3) this.text.y += 10\n\n\n\n}\n}\n\nexport default TitleScene;","function msToTime(duration) {\n    var milliseconds = parseInt((duration % 1000) / 100),\n      seconds = Math.floor((duration / 1000) % 60),\n      minutes = Math.floor((duration / (1000 * 60)) % 60),\n      hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n  \n  \n    return (hours == \"00\"?\"\": hours+\"h \") + (minutes == \"00\"?\"\": minutes+\"m \") + seconds+\"s\";\n  }\n\nclass WonScene extends Phaser.Scene {\n    constructor(callback) {\n        super()\n        this.callback = callback\n    }\n    preload() {\n    }\n\n    create() {\n\n        this.background = this.add.rectangle(0, 0, window.innerHeight, window.innerWidth, 0x90ee90).setOrigin(0).setScrollFactor(0, 0).setScale(2);\n        this.text = this.add.text(window.innerWidth / 2, 0, 'You won!', {\n            fontSize: '64px',\n            fill: '#000000'\n        }).setOrigin(0.5);\n\n        this.displayTime = 0;\n        this.displayKills = 0;\n\n        this.timeUpdateDelay = 5000 / this.data.timeSurvived\n        this.lastUpdateTime = Date.now() \n\n        this.displayKills = (this.data.kills == 1 ? 1 : 0);\n        this.displayCoins = 0\n\n        this.stats = this.add.text(window.innerWidth / 2, window.innerHeight / 2, `You conquered the map and became Ka-HUGE!\\nTime Taken: 0s\\nKills: ${this.displayKills}`, {\n            fontSize: '48px',\n            fill: '#000000'\n        }).setOrigin(0.5);\n\n\n        this.btnrect = this.add.rectangle(0, 0, 0, 0, 0x6666ff);\n        this.btntext = this.add.text(window.innerWidth / 2, window.innerHeight / 1.2, 'Play Again', {\n            fontSize: '48px',\n            fill: '#000000'\n        }).setOrigin(0.5);\n        this.btnrect.x = this.btntext.x - (this.btntext.width/2) - 5\n        this.btnrect.y = this.btntext.y - (this.btntext.height/2) - 5\n        this.btnrect.width = this.btntext.width + 10\n        this.btnrect.height = this.btntext.height + 10\n        //this.stats.y -= this.stats.height\n        this.btnrect.setInteractive().on('pointerdown', (pointer, localX, localY, event) => {\n            this.scene.start('title')\n        });\n        this.returnKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ENTER);\n\n        this.returnKey.on(\"down\", event => {\n            this.scene.start('title')\n        });\n    }\n\n    update() {\n        this.text.setFontSize(window.innerWidth / 10)\n        this.stats.setFontSize(window.innerWidth / 30)\n        this.btntext.setFontSize(window.innerWidth / 25)\n        if (this.text.y < window.innerHeight / 4) this.text.y += 10\n\n        if(this.displayKills < this.data.kills ) {\n            this.displayKills += 1\n            this.lastUpdateKills = Date.now()\n        }\n\n        if(this.displayTime < this.data.timeSurvived) {\n            this.displayTime += 1000\n            \n        }\n        if(this.displayCoins < this.data.coins) {\n            this.displayCoins += 1000\n            \n        }\n\n        this.stats.setText(`You conquered the map and became Ka-HUGE!\\nTime Taken: ${msToTime(this.displayTime)}\\nCoins: ${this.displayCoins}\\nKills: ${this.displayKills}`)\n        const resize = () => {\n            this.game.scale.resize(window.innerWidth, window.innerHeight)\n            this.background.width = window.innerWidth\n            this.background.height = window.innerHeight\n            this.text.x = window.innerWidth / 2\n            this.text.y = window.innerHeight / 4\n            this.stats.x = window.innerWidth / 2\n            this.stats.y = window.innerHeight / 2\n            \n            this.btntext.x = window.innerWidth / 2\n            this.btntext.y = window.innerHeight / 1.2\n\n\n            //this.stats.y -= this.stats.height\n        }\n        this.btnrect.x = this.btntext.x - (this.btntext.width/2) - 5\n        this.btnrect.y = this.btntext.y - (this.btntext.height/2) - 5\n        this.btnrect.width = this.btntext.width + 10\n        this.btnrect.height = this.btntext.height + 10\n        window.addEventListener(\"resize\", resize, false);\n\n    }\n}\n\nexport default WonScene;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import TitleScene from './TitleScene.js';\nimport GameScene from './GameScene.js';\nimport DeathScene from './DeathScene.js';\nimport WonScene from './WonScene.js';\nimport OpenScene from './OpenScene.js';\n\nvar config = {\n    type: Phaser.AUTO,\n    width: window.visualViewport.width,\n    height: window.visualViewport.height,\n    parent: \"game\",\n    dom: {\n        createContainer: true\n    },\n    scale: {\n        mode:Phaser.Scale.RESIZE,\n    }\n};\n\nvar game = new Phaser.Game(config);\n\nvar deathScene = new DeathScene()\nvar winScene = new WonScene()\n\nvar gameScene = new GameScene((data) => {\n    if(data.win) {\n        winScene.data = data.data\n        gameScene.scene.start('win')\n    } else {\n    deathScene.data = data.data\n    gameScene.scene.start('death')\n    }\n})\n\nvar titleScene = new TitleScene((name, music) => {\n    gameScene.name = name\n    gameScene.openingBgm = music\n    titleScene.scene.start('game')\n    titleScene.showPromo = false\n})\ntitleScene.showPromo = true\nvar openScene = new OpenScene()\ngame.scene.add('title', titleScene)\ngame.scene.add('game', gameScene)\ngame.scene.add('death', deathScene)\ngame.scene.add('win', winScene)\ngame.scene.add('open', openScene)\n\ngame.scene.start('open')\n\n//for debugging on the school chromebooks they fricking banned dev console\nwindow.onerror = function(msg, url, line) {\n    document.write(\"Error : \" + msg + \"<br><br>\");\n    document.write(\"Line number : \" + line + \"<br><br>\");\n    document.write(\"File : \" + url);\n}"],"names":[],"sourceRoot":""}